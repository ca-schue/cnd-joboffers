spring:
  data:
    mongodb:
      uri: ${CAREER_SERVICE_MONGODB_URI:mongodb://localhost:27017/career-service?authSource=admin&readPreference=primary&directConnection=true&ssl=false}
      auto-index-creation: true
      uuid-representation: standard
  kafka:
    producer:
      retries: 5
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:http://localhost:9092}
    consumer:
      group-id: career-service
  security:
    oauth2:
      resource-server:
        jwt:
          jwk-set-uri: ${INTERNAL_JWT_ISSUER_URL:http://localhost:8081}/oauth2/jwks

oauth2:
  tokenIssuerUrl: ${INTERNAL_JWT_ISSUER_URL:http://localhost:8081}/oauth2/token
  client-id: ${CAREER_SERVICE_CLIENT_ID:career-service}
  client-secret: ${CAREER_SERVICE_CLIENT_SECRET:6ko*Y(kkMT>W,qWKU4nU5S}

event:
  eventTypePrefix: career-service
  event-store-uri: ${EVENT_STORE_URI:esdb://localhost:2113?tls=false}

endpoints:
  user-service: ${USER_SERVICE_URL:http://localhost:8082}

global:
  defaultFallbackPaginationLimit: 20
  defaultMaxLimitForPagination: 200

joboffer:
  maxJobOfferPerNonPartneredCompany: 20

jobapplication:
  maxJobApplicationPerNonSubscribedUser: 50

management:
  info:
    env:
      enabled: true
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      probes:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true

security:
  csrfActive: true
  corsActive: true

server:
  port: ${CAREER_SERVICE_PORT:8083}

---
spring:
  config:
    activate:
      on-profile: integrationtest

server:
  port: 12345

endpoints:
  user-service: http://localhost:${WIREMOCK_PORT}/user-service

security:
  csrfActive: false
  corsActive: false

