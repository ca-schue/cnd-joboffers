openapi: 3.0.0
info:
  description: API.
  title: User-Service
  version: 0.0.1
servers:
- url: /
paths:
  /users/register:
    put:
      operationId: registerNewUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Registration was successful.
      summary: Register a new user.
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
  /users/{user-id}:
    delete:
      description: Deletes the user.
      operationId: deleteUser
      parameters:
      - explode: false
        in: path
        name: user-id
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "204":
          description: User was deleted.
        "404":
          description: User not found for id.
      tags:
      - User
      x-accepts: application/json
    get:
      description: Get user of provided user id.
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: user-id
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User was found.
        "404":
          description: User not found for id.
      tags:
      - User
      x-accepts: application/json
  /users/{user-id}/public-profile:
    get:
      description: Get user public profile of provided user id.
      operationId: getPublicUserProfile
      parameters:
      - explode: false
        in: path
        name: user-id
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicUserProfile'
          description: User was found.
        "404":
          description: User not found for id.
      tags:
      - User
      x-accepts: application/json
  /users/{user-id}/update-user-profile-email:
    post:
      description: Update the user profile email associated to this user.
      operationId: updateUserProfileEmail
      parameters:
      - explode: false
        in: path
        name: user-id
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileEmailRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User data was updated.
        "404":
          description: User not found for id.
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
  /users/{user-id}/update-user-data:
    post:
      description: Update the user data associated with this user.
      operationId: updateUserData
      parameters:
      - explode: false
        in: path
        name: user-id
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User data was updated.
        "404":
          description: User not found for id.
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
  /users/{user-id}/subscribe:
    post:
      operationId: subscribe
      parameters:
      - explode: false
        in: path
        name: user-id
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendUserSubscriptionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSubscription'
          description: Subscription was successful.
      summary: Makes the user a subscriber or extends their subscription.
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
  /users/{user-id}/accept-company-invitation:
    post:
      operationId: acceptInvitation
      parameters:
      - explode: false
        in: path
        name: user-id
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptCompanyInvitationRequest'
        required: true
      responses:
        "204":
          description: Invitation was accepted.
      summary: Accepts the invitation to be a member of a company.
      tags:
      - User
      x-content-type: application/json
      x-accepts: application/json
  /companies:
    get:
      description: Get company for provided id.
      operationId: searchCompanies
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: size
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPublicCompanyProfileResponse'
          description: Companies for filters were found.
        "404":
          description: Company not found for id.
      tags:
      - Company
      x-accepts: application/json
  /companies/register:
    put:
      operationId: createNewCompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRegistrationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: Registration was successful.
      summary: Creates a new company.
      tags:
      - Company
      x-content-type: application/json
      x-accepts: application/json
  /companies/{company-id}:
    delete:
      description: Deletes the company.
      operationId: deleteCompany
      parameters:
      - explode: false
        in: path
        name: company-id
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "204":
          description: The company was deleted.
        "404":
          description: Company not found for id.
      tags:
      - Company
      x-accepts: application/json
    get:
      description: Get company for provided id.
      operationId: getCompany
      parameters:
      - explode: false
        in: path
        name: company-id
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: Company was found.
        "404":
          description: Company not found for id.
      tags:
      - Company
      x-accepts: application/json
  /companies/{company-id}/public-profile:
    get:
      description: Get company for provided id.
      operationId: getPublicCompanyProfile
      parameters:
      - explode: false
        in: path
        name: company-id
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicCompanyProfile'
          description: Company was found.
        "404":
          description: Company not found for id.
      tags:
      - Company
      x-accepts: application/json
  /companies/{company-id}/invite-user:
    post:
      description: Invites an user to join the company.
      operationId: inviteUserToCompany
      parameters:
      - explode: false
        in: path
        name: company-id
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyInviteUserRequest'
        required: true
      responses:
        "201":
          description: Invitation was sent.
        "404":
          description: Company not found for id.
      tags:
      - Company
      x-content-type: application/json
      x-accepts: application/json
  /companies/{company-id}/update-company-data:
    post:
      description: Overrides the current company data with the provided data.
      operationId: updateCompanyData
      parameters:
      - explode: false
        in: path
        name: company-id
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyDataRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: Registration was successful.
        "404":
          description: Company not found for id.
      tags:
      - Company
      x-content-type: application/json
      x-accepts: application/json
  /token-introspection:
    get:
      operationId: getRequestUserData
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Token is valid and user data could be retrieved.
      summary: Get the user data from the provided access token.
      tags:
      - Auth
      x-accepts: application/json
components:
  parameters:
    UserId:
      explode: false
      in: path
      name: user-id
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
      style: simple
    CompanyId:
      explode: false
      in: path
      name: company-id
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
      style: simple
    Page:
      explode: true
      in: query
      name: page
      required: false
      schema:
        type: integer
      style: form
    Size:
      explode: true
      in: query
      name: size
      required: false
      schema:
        type: integer
      style: form
  schemas:
    PublicUserProfile:
      example:
        last_name: last_name
        id: id
        first_name: first_name
      properties:
        id:
          format: UUID
          type: string
        first_name:
          type: string
        last_name:
          type: string
      required:
      - first_name
      - id
      - last_name
      type: object
    User:
      example:
        associations:
          member_of:
          - null
          - null
          invited_to:
          - null
          - null
        settings:
          nightModeActive: true
        profile:
          user_profile_email: user_profile_email
          last_name: last_name
          first_name: first_name
        id: id
        subscription:
          subscribed: true
          subscribedUntil: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: UUID
          type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
        associations:
          $ref: '#/components/schemas/UserCompanyAssociation'
        settings:
          $ref: '#/components/schemas/UserSettings'
        subscription:
          $ref: '#/components/schemas/UserSubscription'
      required:
      - associations
      - id
      - profile
      - settings
      - subscription
      type: object
    UserProfile:
      example:
        user_profile_email: user_profile_email
        last_name: last_name
        first_name: first_name
      properties:
        user_profile_email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
      required:
      - first_name
      - last_name
      - user_profile_email
      type: object
    UserCompanyAssociation:
      example:
        member_of:
        - null
        - null
        invited_to:
        - null
        - null
      properties:
        member_of:
          items:
            $ref: '#/components/schemas/UUID'
          type: array
        invited_to:
          items:
            $ref: '#/components/schemas/UUID'
          type: array
      required:
      - invited_to
      - member_of
      type: object
    UserSettings:
      example:
        nightModeActive: true
      properties:
        nightModeActive:
          type: boolean
      required:
      - nightModeActive
      type: object
    UserSubscription:
      example:
        subscribed: true
        subscribedUntil: 2000-01-23T04:56:07.000+00:00
      properties:
        subscribed:
          type: boolean
        subscribedUntil:
          format: date-time
          type: string
      required:
      - subscribed
      type: object
    UserRegistrationRequest:
      example:
        user_profile_email: user_profile_email
        last_name: last_name
        first_name: first_name
      properties:
        user_profile_email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
      required:
      - first_name
      - last_name
      - user_profile_email
      type: object
    DeleteUserByUserProfileEmailRequest:
      properties:
        user_profile_email:
          type: string
      required:
      - user_profile_email
      type: object
    ExtendUserSubscriptionRequest:
      example:
        extend_by_in_days: 0
      properties:
        extend_by_in_days:
          type: integer
      required:
      - extend_by_in_days
      type: object
    AcceptCompanyInvitationRequest:
      example:
        company_id: company_id
      properties:
        company_id:
          format: UUID
          type: string
      required:
      - company_id
      type: object
    UpdateUserProfileEmailRequest:
      example:
        user_profile_email: user_profile_email
      properties:
        user_profile_email:
          type: string
      required:
      - user_profile_email
      type: object
    UpdateUserDataRequest:
      example:
        settings:
          night_mode_active: true
        user_profile:
          last_name: last_name
          first_name: first_name
      properties:
        user_profile:
          $ref: '#/components/schemas/UpdateUserProfileRequest'
        settings:
          $ref: '#/components/schemas/UpdateUserSettingsRequest'
      type: object
    UpdateUserProfileRequest:
      example:
        last_name: last_name
        first_name: first_name
      properties:
        first_name:
          type: string
        last_name:
          type: string
      required:
      - first_name
      - last_name
      type: object
    UpdateUserSettingsRequest:
      example:
        night_mode_active: true
      properties:
        night_mode_active:
          type: boolean
      required:
      - night_mode_active
      type: object
    UpdateCompanyDataRequest:
      example:
        settings:
          homepage: homepage
          social_media:
          - social_media
          - social_media
        details:
          name: name
          description: description
          location: location
          tags:
          - tags
          - tags
      properties:
        details:
          $ref: '#/components/schemas/UpdateCompanyDetailsRequest'
        settings:
          $ref: '#/components/schemas/UpdateCompanyLinksRequest'
      type: object
    UpdateCompanyDetailsRequest:
      example:
        name: name
        description: description
        location: location
        tags:
        - tags
        - tags
      properties:
        name:
          type: string
        description:
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        location:
          type: string
      type: object
    UpdateCompanyLinksRequest:
      example:
        homepage: homepage
        social_media:
        - social_media
        - social_media
      properties:
        homepage:
          type: string
        social_media:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    PaginatedPublicCompanyProfileResponse:
      example:
        pagination:
          item_count: 5
          total_pages: 0
          total_item_count: 1
          current_page: 6
        content:
        - details:
            name: name
            description: description
            location: location
            tags:
            - tags
            - tags
          links:
            website_url: website_url
            social_media:
            - social_media
            - social_media
          id: id
        - details:
            name: name
            description: description
            location: location
            tags:
            - tags
            - tags
          links:
            website_url: website_url
            social_media:
            - social_media
            - social_media
          id: id
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        content:
          items:
            $ref: '#/components/schemas/PublicCompanyProfile'
          type: array
      type: object
    PublicCompanyProfile:
      example:
        details:
          name: name
          description: description
          location: location
          tags:
          - tags
          - tags
        links:
          website_url: website_url
          social_media:
          - social_media
          - social_media
        id: id
      properties:
        id:
          format: UUID
          type: string
        details:
          $ref: '#/components/schemas/CompanyDetails'
        links:
          $ref: '#/components/schemas/CompanyLinks'
      required:
      - details
      - id
      - links
      type: object
    Company:
      example:
        owner: owner
        members:
        - null
        - null
        details:
          name: name
          description: description
          location: location
          tags:
          - tags
          - tags
        links:
          website_url: website_url
          social_media:
          - social_media
          - social_media
        id: id
        partner_program:
          partner_until: 2000-01-23T04:56:07.000+00:00
          partnered: true
      properties:
        id:
          format: UUID
          type: string
        owner:
          format: UUID
          type: string
        members:
          items:
            $ref: '#/components/schemas/UUID'
          type: array
          uniqueItems: true
        details:
          $ref: '#/components/schemas/CompanyDetails'
        links:
          $ref: '#/components/schemas/CompanyLinks'
        partner_program:
          $ref: '#/components/schemas/CompanyPartnerProgram'
      required:
      - details
      - id
      - links
      - members
      - owner
      - partner_program
      type: object
    CompanyDetails:
      example:
        name: name
        description: description
        location: location
        tags:
        - tags
        - tags
      properties:
        name:
          type: string
        description:
          type: string
        tags:
          items:
            type: string
          type: array
          uniqueItems: true
        location:
          type: string
      required:
      - description
      - name
      - tags
      type: object
    CompanyLinks:
      example:
        website_url: website_url
        social_media:
        - social_media
        - social_media
      properties:
        website_url:
          type: string
        social_media:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    CompanyPartnerProgram:
      example:
        partner_until: 2000-01-23T04:56:07.000+00:00
        partnered: true
      properties:
        partnered:
          type: boolean
        partner_until:
          format: date-time
          type: string
      required:
      - partnered
      type: object
    CompanyRegistrationRequest:
      example:
        owner: owner
        details:
          name: name
          description: description
          location: location
          tags:
          - tags
          - tags
        links:
          website_url: website_url
          social_media:
          - social_media
          - social_media
      properties:
        owner:
          format: UUID
          type: string
        details:
          $ref: '#/components/schemas/CompanyDetails'
        links:
          $ref: '#/components/schemas/CompanyLinks'
      required:
      - details
      - owner
      type: object
    CompanyInviteUserRequest:
      example:
        user_profile_email: user_profile_email
      properties:
        user_profile_email:
          type: string
      type: object
    Pagination:
      example:
        item_count: 5
        total_pages: 0
        total_item_count: 1
        current_page: 6
      properties:
        total_pages:
          type: integer
        current_page:
          type: integer
        total_item_count:
          format: int64
          type: integer
        item_count:
          type: integer
      required:
      - current_page
      - item_count
      - total_item_count
      - total_pages
      type: object
    UUID:
      format: UUID
      type: string

