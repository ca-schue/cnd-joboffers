spring:
  activeProfile: docker

localConfig:
  # This config is based on your machine.
  #
  # For Docker Desktop + Windows the path starts with /run/desktop/mnt/host
  # and then the drive + location of the git repository + "/volumes"
  # Example: /run/desktop/mnt/host/d/git-repos/cnd-joboffers/volumes
  #
  # For Docker Desktop + Mac you can use the absolute path of the volumes folder.
  # Just make sure the parent folder is in the configured shared folders of Docker Desktop (/Users/* is shared by default; See Docker Desktop settings)
  mountBasePath: "/Users/thalmaier/work/cnd-joboffers/volumes"

microservices:
  authService:
    name: auth-service
    serviceName: auth-svc
    port: "8080"
    image: caschuen/cnd-joboffers-auth-service
    imageTag: latest
    url: "http://{{ .Values.microservices.authService.serviceName }}:{{ .Values.microservices.authService.port }}"
    dbName: auth-service
    dbUri: "{{ .Values.mongodb.connectionUrl }}/{{ .Values.microservices.authService.dbName }}?authSource=admin&readPreference=primary&directConnection=true&ssl=false"
    jwtPublicKeyBase64: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAhweBNtTB1Cp78qyBRuhvqVjcT/DwZYKcaakP3aR83OlQ3rwKhvlvH10afx1w0aSOaO/efUYvwAl+R6/4V+RJPLDXcrAwe7dTQ9Ba8dmFx/A9ge9NtPqyvmDbx9eKEIEjOHNYmSBauDnHCxQIkL58BoSipfKEZngXMrEvBL9MGNZ00gl3aLkqbbf/6yWRtpN3BFsUgTTsau/dcJqcSr92aRzJG77683PEX4UqJi2XeEci589+OeS9Xk3hf4UPMHiQjJOogDfaQg9z0ErIIJbumi0as9Pw0/m8BIHykL9LrJc+37Zs74YJbgbVWhrJ4cBhFdmITserae91YwJ9G3LrBwIDAQAB
    #jwtPrivateKeyBase64: MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCHB4E21MHUKnvyrIFG6G+pWNxP8PBlgpxpqQ/dpHzc6VDevAqG+W8fXRp/HXDRpI5o7959Ri/ACX5Hr/hX5Ek8sNdysDB7t1ND0Frx2YXH8D2B7020+rK+YNvH14oQgSM4c1iZIFq4OccLFAiQvnwGhKKl8oRmeBcysS8Ev0wY1nTSCXdouSptt//rJZG2k3cEWxSBNOxq791wmpxKv3ZpHMkbvvrzc8RfhSomLZd4RyLnz3455L1eTeF/hQ8weJCMk6iAN9pCD3PQSsgglu6aLRqz0/DT+bwEgfKQv0uslz7ftmzvhgluBtVaGsnhwGEV2YhOx6tp73VjAn0bcusHAgMBAAECggEAAbusbRDnrfqfnaVDgYP75D9iOy/F/h+M32ROnP3T+8fjhFWt3ZP3rlOKbVrqNvP26feOMlXDc3e2ZGLTUVl6QSpUkZcbqt2BrECmh4J5ukUQnQl+b1YPvkF4VgUjs1jc+V1YTprWNJV1Qw9ORCwAY9sG9WdP9hAQ3X3dsyC7cCQnv1bI6YwVmThN10BMkkVzLdxNSCDdEnhV3fACs97ZPRTHZlyeGB9FVI9m/lIk93KcMqtCc88HOAja3b+8pfT5v3Lu7sC/Yd35siLQRMCOMyifqkqOShd+O2eYNSEWWG0kz0arTIUJ+E/ZlUf0AkCcw4/czhjHdi0IulXR+9+dxQKBgQC9XH11p4gK4YF0P+evz+tiM6pdQqZoJQmxNicP8z2oFYQfcGzlTxTMzAkVC+XZIPDHNF9f7x3TDUs/W2sqeTabWYh4I7zfvczUC4bc2VHDtKUDuNX6BYqpnSEdsSaMssi+YgYeo4AOb7j7Kr7JQUBucg/9F1aWdNIAFj6vFhTEJQKBgQC2jELWlvDDCZRqbawBeun8X6JRXNhPA3rXYwQ4BnyMW2cCskOxShLyjiOA30xFl4eQ7RKMPT1ldAmc1YzdDGJbu+P3FrtbHAREIO0voh5HCJWVw3v8mDnqt/q+B9T2T4g6q2WRWKbtpdjQqO6OFQZb/VNzL6fLXy24Cmd+LKXUuwKBgBkbFyMvOBFBPrmb82rS5UFa2j6NJKTwLC3LoTgzJryPRbopXLa2Wmqgrp+UuT+lZ2bx4adFe63MuGpJA5dZBM1p/Hb5PgRoFK0Ubif/xCBvZeVtbyk77Nt6ErbuEs9asNTVCDytrr+7PkpGq47hUNqT0tzaaEeAa4tJZ7ws8EnlAoGADcHWS6vGazxulfK78sSbm6xtZCpWFuZRPKg2qi469qzwv3BFz7egY+04Wb76VYhM7CwhqLX4yYuMKeiiHAqR4w3u6TEqX3xmCehdV6ilFX9dHpND5c5nFvxUhju63fEyeBFwrxp6QhCsnVUN3WFSQF6ACn896wK6RFNsZ0LgIH8CgYA8WXRiwIRm7iy1QkoWlbJYJNXSigrj6yl2n8Fa+WU/oCraI0iQYCwmHnTTICMjSWyMLxGv7FCXIa1MX1cHNdGgLyuMOJ+jafaQU4dVgOVB4OL/5mS2bFQxmpM7Lw0CLEATEtRncYh4ECU81UWvtJO3xmtQYkws2P0Q13cyzAqVkw==
    jwtKeyId: 4dbacae9-3b24-46c0-8ecb-332b9bdd25ec
    jwtValidityInSeconds: "86400"
    jwtRsaSigningAlgorithm: RS256
  userService:
    name: user-service
    serviceName: user-svc
    port: "8080"
    image: caschuen/cnd-joboffers-user-service
    imageTag: latest
    url: "http://{{ .Values.microservices.userService.serviceName }}:{{ .Values.microservices.userService.port }}"
    dbName: user-service
    dbUri: "{{ .Values.mongodb.connectionUrl }}/{{ .Values.microservices.userService.dbName }}?authSource=admin&readPreference=primary&directConnection=true&ssl=false"
  careerService:
    name: career-service
    serviceName: career-svc
    port: "8080"
    image: caschuen/cnd-joboffers-career-service
    imageTag: latest
    url: "http://{{ .Values.microservices.careerService.serviceName }}:{{ .Values.microservices.careerService.port }}"
    dbName: career-service
    dbUri: "{{ .Values.mongodb.connectionUrl }}/{{ .Values.microservices.careerService.dbName }}?authSource=admin&readPreference=primary&directConnection=true&ssl=false"
    oAuth2ClientID: career-service
    oAuth2ClientSecretEncrypted: $2a$10$1KgYAGEqhADDPvEzxZ7Q0OtPfPrKo8ZDTJAd1SG342YVdT9XNZQN6
    #oAuth2ClientSecretPlaintext: 6ko*Y(kkMT>W,qWKU4nU5S
  notificationService:
    name: notification-service
    serviceName: notification-svc
    port: "8080"
    image: caschuen/cnd-joboffers-notification-service
    imageTag: latest
  frontend:
    name: frontend
    serviceName: frontend
    port: "80"
    image: caschuen/cnd-joboffers-frontend
    imageTag: latest
    url: "http://{{ .Values.microservices.frontend.serviceName }}:{{ .Values.microservices.frontend.port }}"
    oidc:
      discoveryEndpoint: https://accounts.google.com
      clientID: 1059672486285-gea53vidspg5m9ff1d6mg5q5vjigva1t.apps.googleusercontent.com
      #clientSecret: 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
      clientRedirectUrl: http://localhost

ingress:
  url: http://localhost
  endpoints:
    auth:
      endpoint: /auth
      serviceName: "{{ .Values.microservices.authService.serviceName }}"
      port: "{{ .Values.microservices.authService.port }}"
      externalUrl: "{{ .Values.ingress.url }}{{ .Values.ingress.endpoints.auth.endpoint }}"
    user:
      endpoint: /user
      serviceName: "{{ .Values.microservices.userService.serviceName }}"
      port: "{{ .Values.microservices.userService.port }}"
      externalUrl: "{{ .Values.ingress.url }}{{ .Values.ingress.endpoints.user.endpoint }}"
    career:
      endpoint: /career
      serviceName: "{{ .Values.microservices.careerService.serviceName }}"
      port: "{{ .Values.microservices.careerService.port }}"
      externalUrl: "{{ .Values.ingress.url }}{{ .Values.ingress.endpoints.career.endpoint }}"
    frontend:
      endpoint: ""
      serviceName: "{{ .Values.microservices.frontend.serviceName }}"
      port: "{{ .Values.microservices.frontend.port }}"

mongodb:
  name: mongodb
  serviceName: mongodb
  port: "27017"
  connectionUrl: "mongodb://{{ .Values.mongodb.initUser }}:{{ .Values.mongodb.initPassword }}@{{ .Values.mongodb.serviceName }}:{{ .Values.mongodb.port }}"
  imageTag: "4.4.6"
  initUser: root
  initPassword: root
  startupScript: |
    db.getSiblingDB("{{ .Values.microservices.authService.dbName }}").Clients.insertOne({
      "_id": "{{ .Values.microservices.careerService.oAuth2ClientID }}",
      "encryptedPassword": "{{ .Values.microservices.careerService.oAuth2ClientSecretEncrypted }}",
      "audiences": ["user-service", "auth-service", "career-service", "notification-service"],
      "scopes": ["getUser", "getCompany"],
      "lastLogin": new Date("2023-10-11T12:58:47.275Z"),
      "lastPasswordChange": new Date("2023-10-11T12:58:47.275Z"),
      "_class": "thi.cnd.authservice.adapters.out.repository.clients.DAOs.ClientDAO"
    });

kafka:
  name: kafka
  serviceName: kafka-event
  port: "9092"
  imageTag: "7.4.3"
  bootstrapServer: "http://{{ .Values.kafka.serviceName }}:{{ .Values.kafka.port }}"
  advertisedListeners: "PLAINTEXT://{{ .Values.kafka.serviceName }}:{{ .Values.kafka.port }}"

zookeeper:
  serviceName: zookeeper
  port: "2181"
  imageTag: "7.4.3"
  connectionUrl: "{{ .Values.zookeeper.serviceName }}:{{ .Values.zookeeper.port }}"

eventstore:
  serviceName: eventstoredb
  webUIPort: "2113"
  dbPort: "1113"
  image: eventstore/eventstore
  #imageTag: 23.6.0-buster-slim
  # For ARM-based processors
  imageTag: 23.6.0-alpha-arm64v8
  connectionUrl: esdb://{{ .Values.eventstore.serviceName }}:{{ .Values.eventstore.webUIPort }}?tls=false

auth:
  internalJwtIssuerUrl: "{{ .Values.microservices.authService.url }}"
