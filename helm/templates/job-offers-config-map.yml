apiVersion: v1
kind: ConfigMap
metadata:
  name: job-offers-config-map
  namespace: default
data:
  # NGINX
  {{- with .Values.ingress }}
  NGINX_URL: {{ .url }}
  AUTH_NGINX_ENDPOINT: {{ .endpoints.auth.endpoint }}
  USER_NGINX_ENDPOINT: {{ .endpoints.user.endpoint }}
  CAREER_NGINX_ENDPOINT: {{ .endpoints.career.endpoint }}
  {{- end }}

  # SPRING BOOT
  SPRING_PROFILES_ACTIVE: {{ .Values.spring.activeProfile }}

  # USER SERVICE
  {{- with .Values.microservices.userService }}
  USER_SERVICE_URL: {{ tpl .url $ }}
  USER_SERVICE_MONGODB_URI: {{ tpl (tpl .dbUri $) $}}
  USER_SERVICE_PORT: {{ tpl .port $ | quote }}
  {{- end }}

  # AUTH SERVICE
  {{- with .Values.microservices.authService }}
  AUTH_SERVICE_URL: {{ tpl .url $ }}
  AUTH_SERVICE_PORT: {{ .port | quote }}
  INTERNAL_JWT_ISSUER_URL: {{ tpl (tpl $.Values.auth.internalJwtIssuerUrl $) $ }}
  AUTH_SERVICE_DB: {{ .dbName }}
  AUTH_SERVICE_MONGODB_URI: {{ tpl (tpl .dbUri $) $ }}
  JWT_PUBLIC_KEY_BASE64: {{ .jwtPublicKeyBase64 }}
  #JWT_PRIVATE_KEY_BASE64: {{ .jwtPrivateKeyBase64 }}
  JWT_KEY_ID: {{ .jwtKeyId }}
  JWT_VALIDITY_IN_SECONDS: {{ .jwtValidityInSeconds | quote }}
  JWT_KEY_ALGORITHM: {{ .jwtKeyAlgorithm }}
  JWT_SIGNING_ALGORITHM: {{ .jwtSigningAlgorithm }}
  {{- end }} 

  # CAREER SERVICE
  {{- with .Values.microservices.careerService }}
  CAREER_SERVICE_URL: {{ tpl .url $ }}
  CAREER_SERVICE_MONGODB_URI: {{ tpl (tpl .dbUri $) $ }}
  #CAREER_SERVICE_CLIENT_ID: {{ .oAuth2ClientID }}
  #CAREER_SERVICE_CLIENT_SECRET: {{ .oAuth2ClientSecretPlaintext }}
  CAREER_SERVICE_PORT: {{ .port | quote }}
  {{- end }} 

  # MONGODB
  MONGO_INITDB_ROOT_USERNAME: {{ .Values.mongodb.initUser }}
  MONGO_INITDB_ROOT_PASSWORD: {{ .Values.mongodb.initPassword }}

  # KAFKA
  KAFKA_ZOOKEEPER_CONNECT: {{ tpl .Values.zookeeper.connectionUrl $ }}
  KAFKA_ADVERTISED_LISTENERS: {{ tpl .Values.kafka.advertisedListeners $ }}
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
  KAFKA_BOOTSTRAP_SERVER: {{ tpl .Values.kafka.bootstrapServer . }}

  # ZOOKEEPER
  ZOOKEEPER_CLIENT_PORT: {{ .Values.zookeeper.port | quote }}
  ZOOKEEPER_TICK_TIME: "2000"

  # EVENT STORE DB
  EVENT_STORE_URI: {{ tpl .Values.eventstore.connectionUrl $ }}
  EVENTSTORE_CLUSTER_SIZE: "1"
  EVENTSTORE_RUN_PROJECTIONS: All
  EVENTSTORE_START_STANDARD_PROJECTIONS: "true"
  EVENTSTORE_EXT_TCP_PORT: {{ .Values.eventstore.dbPort | quote }}
  EVENTSTORE_HTTP_PORT: {{ .Values.eventstore.webUIPort | quote }}
  EVENTSTORE_INSECURE: "true"
  EVENTSTORE_ENABLE_EXTERNAL_TCP: "true"
  EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP: "true"

  # FRONTEND
  {{- with .Values.microservices.frontend }}
  FRONTEND_URL: {{ tpl .url $ }}
  APP_ENV: prod
  EXTERNAL_AUTH_SERVICE_URL: {{ tpl $.Values.ingress.endpoints.auth.externalUrl $ }}
  EXTERNAL_USER_SERVICE_URL: {{ tpl $.Values.ingress.endpoints.user.externalUrl $ }}
  EXTERNAL_CAREER_SERVICE_URL: {{ tpl $.Values.ingress.endpoints.career.externalUrl $ }}
  OIDC_PROVIDER_DISCOVERY_ENDPOINT: {{ .oidc.discoveryEndpoint }}
  OIDC_CLIENT_ID: {{ .oidc.clientID }}
  #OIDC_CLIENT_SECRET: {{ .oidc.clientSecret }}
  OIDC_CLIENT_REDIRECT_URL: {{ .oidc.clientRedirectUrl }}
  {{- end }} 