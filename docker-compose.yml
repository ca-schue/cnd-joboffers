version: '3.8'
services:

  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - "80:80"
    volumes:
      - ./templates:/etc/nginx/templates
    networks:
      - my-network
    environment:
      WEB_SERVER_URL: http://auth-service:8080/
      USER_SERVICE_URL: http://user-service:8080/
      AUTH_SERVICE_URL: http://auth-service:8080/
      CAREER_SERVICE_URL: http://career-service:8080/

  mongodb:
    image: mongo
    networks:
      - my-network
    expose:
      - "27017"
    volumes:
      - ./volumes/mongo-data:/data/db
      - ./auth-service/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: auth-service
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - my-network
    expose:
      - '2181'
    volumes:
      - ./volumes/zookeeper/data:/var/lib/zookeeper/data
      - ./volumes/zookeeper/log:/var/lib/zookeeper/log
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - my-network
    expose:
      - "9092"
    volumes:
      - ./volumes/kafka-broker/data:/var/lib/kafka/data
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 20s


  eventstoredb:
    image: eventstore/eventstore:23.6.0-buster-slim
    # For ARM-based processors
    # image: eventstore/eventstore:23.6.0-alpha-arm64v8
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    expose:
      - '1113'
      - '2113'
    volumes:
      - ./volumes/eventstore-volume-data:/var/lib/eventstore
      - ./volumes/eventstore-volume-logs:/var/log/eventstore
    networks:
      - my-network

  auth-service:
    build: ./authservice/.
    networks:
      - my-network
    expose:
      - "8080"
    depends_on:
      mongodb:
          condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      MONGODB_URI: mongodb://root:root@mongodb:27017/auth-service?authSource=admin&readPreference=primary&directConnection=true&ssl=false
      KAFKA_BOOTSTRAP_SERVER: http://kafka:9092
      USER_SERVICE_URL: http://user-service:8080
      AUTH_SERVICE_URL: http://auth-service:8080
      EXTERNAL_OIDC_PROVIDER_DISCOVERY_ENDPOINT: "https://accounts.google.com"
      JWT_PUBLIC_KEY_BASE64: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAhweBNtTB1Cp78qyBRuhvqVjcT/DwZYKcaakP3aR83OlQ3rwKhvlvH10afx1w0aSOaO/efUYvwAl+R6/4V+RJPLDXcrAwe7dTQ9Ba8dmFx/A9ge9NtPqyvmDbx9eKEIEjOHNYmSBauDnHCxQIkL58BoSipfKEZngXMrEvBL9MGNZ00gl3aLkqbbf/6yWRtpN3BFsUgTTsau/dcJqcSr92aRzJG77683PEX4UqJi2XeEci589+OeS9Xk3hf4UPMHiQjJOogDfaQg9z0ErIIJbumi0as9Pw0/m8BIHykL9LrJc+37Zs74YJbgbVWhrJ4cBhFdmITserae91YwJ9G3LrBwIDAQAB"
      JWT_PRIVATE_KEY_BASE64: "MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCHB4E21MHUKnvyrIFG6G+pWNxP8PBlgpxpqQ/dpHzc6VDevAqG+W8fXRp/HXDRpI5o7959Ri/ACX5Hr/hX5Ek8sNdysDB7t1ND0Frx2YXH8D2B7020+rK+YNvH14oQgSM4c1iZIFq4OccLFAiQvnwGhKKl8oRmeBcysS8Ev0wY1nTSCXdouSptt//rJZG2k3cEWxSBNOxq791wmpxKv3ZpHMkbvvrzc8RfhSomLZd4RyLnz3455L1eTeF/hQ8weJCMk6iAN9pCD3PQSsgglu6aLRqz0/DT+bwEgfKQv0uslz7ftmzvhgluBtVaGsnhwGEV2YhOx6tp73VjAn0bcusHAgMBAAECggEAAbusbRDnrfqfnaVDgYP75D9iOy/F/h+M32ROnP3T+8fjhFWt3ZP3rlOKbVrqNvP26feOMlXDc3e2ZGLTUVl6QSpUkZcbqt2BrECmh4J5ukUQnQl+b1YPvkF4VgUjs1jc+V1YTprWNJV1Qw9ORCwAY9sG9WdP9hAQ3X3dsyC7cCQnv1bI6YwVmThN10BMkkVzLdxNSCDdEnhV3fACs97ZPRTHZlyeGB9FVI9m/lIk93KcMqtCc88HOAja3b+8pfT5v3Lu7sC/Yd35siLQRMCOMyifqkqOShd+O2eYNSEWWG0kz0arTIUJ+E/ZlUf0AkCcw4/czhjHdi0IulXR+9+dxQKBgQC9XH11p4gK4YF0P+evz+tiM6pdQqZoJQmxNicP8z2oFYQfcGzlTxTMzAkVC+XZIPDHNF9f7x3TDUs/W2sqeTabWYh4I7zfvczUC4bc2VHDtKUDuNX6BYqpnSEdsSaMssi+YgYeo4AOb7j7Kr7JQUBucg/9F1aWdNIAFj6vFhTEJQKBgQC2jELWlvDDCZRqbawBeun8X6JRXNhPA3rXYwQ4BnyMW2cCskOxShLyjiOA30xFl4eQ7RKMPT1ldAmc1YzdDGJbu+P3FrtbHAREIO0voh5HCJWVw3v8mDnqt/q+B9T2T4g6q2WRWKbtpdjQqO6OFQZb/VNzL6fLXy24Cmd+LKXUuwKBgBkbFyMvOBFBPrmb82rS5UFa2j6NJKTwLC3LoTgzJryPRbopXLa2Wmqgrp+UuT+lZ2bx4adFe63MuGpJA5dZBM1p/Hb5PgRoFK0Ubif/xCBvZeVtbyk77Nt6ErbuEs9asNTVCDytrr+7PkpGq47hUNqT0tzaaEeAa4tJZ7ws8EnlAoGADcHWS6vGazxulfK78sSbm6xtZCpWFuZRPKg2qi469qzwv3BFz7egY+04Wb76VYhM7CwhqLX4yYuMKeiiHAqR4w3u6TEqX3xmCehdV6ilFX9dHpND5c5nFvxUhju63fEyeBFwrxp6QhCsnVUN3WFSQF6ACn896wK6RFNsZ0LgIH8CgYA8WXRiwIRm7iy1QkoWlbJYJNXSigrj6yl2n8Fa+WU/oCraI0iQYCwmHnTTICMjSWyMLxGv7FCXIa1MX1cHNdGgLyuMOJ+jafaQU4dVgOVB4OL/5mS2bFQxmpM7Lw0CLEATEtRncYh4ECU81UWvtJO3xmtQYkws2P0Q13cyzAqVkw=="
      JWT_KEY_ID: 4dbacae9-3b24-46c0-8ecb-332b9bdd25ec
      JWT_VALIDITY_IN_SECONDS: 86400
      JWT_KEY_ALGORITHM: RSA
      JWT_SIGNING_ALGORITHM: RS256
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s

  user-service:
    build: ./userservice/.
    networks:
      - my-network
    expose:
      - "8080"
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
      auth-service:
          condition: service_healthy
    environment:
      AUTH_SERVICE_URL: http://auth-service:8080
      KAFKA_BOOTSTRAP_SERVER: 'http://kafka:9092'
      MONGODB_URI: mongodb://root:root@mongodb:27017/user-service?authSource=admin&readPreference=primary&directConnection=true&ssl=false
      # TODO: mongodb://localhost:27017/user-service
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s

  career-service:
    build: ./careerservice/.
    networks:
      - my-network
    expose:
      - "8080"
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
      eventstoredb:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      KAFKA_BOOTSTRAP_SERVER: 'http://kafka:9092'
      EVENT_STORE_URI: esdb://eventstoredb:2113?tls=false
      MONGODB_URI: mongodb://root:root@mongodb:27017/career-service?authSource=admin&readPreference=primary&directConnection=true&ssl=false
      CAREER_SERVICE_CLIENT_SECRET: "6ko*Y(kkMT>W,qWKU4nU5S"
      AUTH_SERVICE_URL: http://auth-service:8080
      USER_SERVICE_URL: http://user-service:8080
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s


  notification-service:
    build: ./notificationservice/.
    networks:
      - my-network
    expose:
      - "8080"
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      KAFKA_BOOTSTRAP_SERVER: 'http://kafka:9092'
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s


networks:
  my-network:
    name: my-network
